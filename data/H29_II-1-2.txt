（１）利用目的
#==以下、6/5コメント
#「開発の枠組みを定義した、再利用可能なクラスの集合」と言う言葉を
#もう少しわかりやすく書いた方が良いです。
#「再利用可能なクラスの集合と、それを再利用するために定義された開発の枠組み」等。
#
#「効率的に開発を実施することが目的」の方がストレートかと思います。
#==6/5コメントここまで
#==以下、6/7コメント
#論文でフレームワークとデザインパターンを「対比」する必要があります。
#ただ、概念の階層が異なるので、単純な対比は難しいと思います。
#「〜に対し」とか「一方で〜」という言い回しを使うと、対比している論文と読めます。
#==6/7コメントここまで
フレームワークとは、再利用可能なクラスの集合と、それを再利用するために定義された開発の枠組みである。開発効率向上が利用の目的である。
一方、デザインパターンは、過去の設計の成功パターンを集めたもので、フレームワークにも適用されている。設計品質向上が利用の目的である。

（２）特徴
#==以下、6/5コメント
#ちょっと違う気がします。「●●が特徴である」の方がストレートかと思います。
#==6/5コメントここまで
#==以下、6/7コメント
#コードの自動生成は、フレームワークの本質的な特徴ではないと思います。
#（取っ払っても、フレームワークですよね）別の特徴を記載すべきです。
#デザインパターンで論じている「共通認識」も、デザインパターン独自の特徴とは言い難いです。
#（ライブラリ、フレームワーク、データ構造でも「共通認識」が特徴と言えます）
#==6/7コメントここまで
フレームワーク、デザインパターン共に、学習に時間がかかるものの、一度学習すると継続して効果を得られる特徴がある。
フレームワークは、実装寄りのもので、開発効率向上のために、実装に制約をかける特徴がある。
これに対して、デザインパターンは、設計寄りのもので、選択の自由度が高い特徴がある。

（３）利用時の留意点
#==以下、6/5コメント
#留意点という言葉を入れましょう。
#フレームワークは枠組みに従わない場合、開発効率が低下する。
#よって、枠組みに従って開発することに留意が必要である。等
#==6/5コメントここまで
#==以下、6/7コメント
#実際に使う場合の留意点をあげれば良いので、「用途にあった使い方をしよう」
#という論調で良いと思います。
#ただし、できれば、(2)と(3)の内容はリンクするように記載してください。
#フレームワークを使用し、ビジネスロジックに集中すると、どのような留意点があるか、
#デザインパターンを利用し、共通認識を持つと、どのような留意点があるか、
#を論文の流れとして記載する必要があります。
#==6/7コメントここまで
フレームワーク、デザインパターンとも、学習コストが高いため、最初にどのフレームワーク／デザインパターン集を採用するか、留意が必要である。
フレームワークは枠組みに従わない場合、開発効率が低下するため、枠組みに従って開発することに留意が必要である。
デザインパターンは、適切に使用しないと設計品質が悪化する可能性があるため、最適なパターンを時と場合に応じて使い分けることに留意が必要である。
