（１）利用目的
フレームワークとは、開発の枠組みを定義した、再利用可能なクラスの集合である。フレームワークの提供する枠組みに従ってアプリケーションを開発することにより、効率的に開発を実施できる。
デザインパターンは、過去の設計の成功パターンを集めたもので、フレームワークにも適用されている。設計上の課題が発生した時、デザインパターンを適用することにより、設計品質の向上が期待できる。

（２）特徴
フレームワークにてテンプレートとなるコードを自動生成する。このため、開発者は見た目やビジネスロジックの開発に集中できる。
デザインパターンは、開発者同士で共通認識を持つためにも使用できる。どのデザインパターンを使うか共通認識を持つことで、設計方針を統一化できる。

（３）利用時の留意点
フレームワークは枠組みに従ってモノ作りできる状況であれば、開発者のスキルによらず、効率的に開発できる。しかし、枠組みに従わない場合、開発効率が低下する。
デザインパターンは、最適なパターンを時と場合に応じて使い分ける技術が必要となる。
