１．要求を定義するプロセス

（１）要求獲得
#要求獲得とは、ステークホルダーを洗い出し、インタビューや会議などで要求を洗い出すプロセスである。
#要求獲得時に利用する技法として、ステークホルダー分析がある。
#ステークホルダーとその間の関係を洗い出し、システムへの影響度を明確化する。
#明確化する方法として、ステークホルダマトリクスを作成する。重要度と影響度でマトリクスを作成し、分類することにより、関係を明確化できる。
要求獲得時に利用する技法として、ユースケース図がある。
ユースケース図により、要求をシナリオとして表現する。これにより、実際にシステムを利用する人の視点から、システムの動作を見ることができる。

（２）要求仕様化
#要求仕様化とは、要求獲得にて抽出した要求がある程度固まってきた段階で、仕様化するプロセスである。
要求仕様化でよく利用される技法として、ＵＳＤＭがある。
ＵＳＤＭとは、要求仕様を記載するための記法で、「仕様は要求の中の動詞にある」と言う考えを持っている。要求と一緒に理由を記載するフォーマットになっており、要求の意図や背景を補完できる。

２．技法を利用する利点

（１）ユースケース図
ユースケース図を利用することにより、システムの外部と内部との境界を明確化できる。これにより、ステークホルダー間で認識の相違なく、要求について合意できる利点がある。

（２）ＵＳＤＭ
ＵＳＤＭの仕様により、仕様の漏れ／認識違いを抑止できる。
ＵＳＤＭは、要求と要求仕様の階層構造となっている。階層構造にすることで、仕様の漏れを防止する。
また、要求の中の動詞を要求仕様とみなす。要求中の動詞に対して、具体的にどのような処理をすべきか仕様化する。これにより、仕様の漏れを防止する。
さらに、ＵＳＤＭは要求と一緒に理由を記載する。これにより、認識違いを防止する。

３．利用時の留意点

（１）ユースケース図
ユースケース図は、システムの利用者の視点で作る必要がある。ユースケース図を、ソフトウェア開発の視点で作成すると、ステークホルダー間で認識の相違が発生する可能性がある。
モノづくりの視点は入れずに、「誰が、何をしたら、何ができると嬉しいか？」と言う原則に従って要求獲得を進める必要がある。

（２）ＵＳＤＭ
これまで箇条書きやベタ書きで仕様を記述してきた技術者にとって，ＵＳＤＭで仕様を表現することは難しいように思えるため、適用がうまく進められない可能性が高い。
学習コストが高いこと、実施コストが高いことが課題である。しかし、先ほど利点で述べたように、ＵＳＤＭは仕様の漏れ／認識違いを抑止する有力な手法であり、前工程で障害を検出できる可能性が高い。
コストに見合う価値があることを、組織内に周知して、適用を進める必要がある。

